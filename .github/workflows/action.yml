
env:
  STACK: java
  BUILD_TECH: java_maven
  MVN_ARGS: clean install --batch-mode --update-snapshots verify
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0

on:
  push:
  # and the target with some regex to match specific  branch names
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'
  pull_request:
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'

jobs:
#  pre-commit:
#    runs-on: ubuntu-latest 
#      
#    steps:
#      - name: Set up pre-commit cache
#        id: commit_check
#        uses: pre-commit/action@v2.0.0
#        with:
#          extra_args: --files ${{steps.file_changes.outputs.files}}
#
#      - name: PR comment
#        if: failure()
#        uses: actions/github-script@v4
#
#        with:
#          github-token: ${{secrets.GIT_TOKEN}}
#          script: |
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: ' Ups, something went wrong. Please checkout the following error:  '
#            });
  Build:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        node-version: [16.x]    
    
    steps:
    ######## Checkout code ########
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0
          
#      - name: Notify dedicated teams channel
#        uses: jdcargile/ms-teams-notification@v1.3
#        with:
#          github-token: ${{ github.token }} # this will use the runner's token.
#          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#          notification-summary: Build Started
#          notification-color: 17a2b8
#      - name: show job status
#        if: always()
#        run: echo ${{ job.status }}
#      - name: fail the job
#        run: exit 1
        
#      - name: set_step_status
#        if: ${{ job.status == 0 }}
#        run: |
#          echo ::set-env JOB_STATUS_CODE=2
      ######## Setup JDK 11 ########
      - name: Set up JDK 11
        id: setup_jdk
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          java-version: '11'
          distribution: 'adopt'
          
#      - name: Print Setup status
#        run: echo ${{ steps.setup_jdk.outcome }}
        
      ######## Build - Maven ########
      - name: Build with Maven
        id: build_maven
        if: ${{ env.BUILD_TECH == 'java_maven' }}
        run: mvn ${{ env.MVN_ARGS }}
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}        
    
      ######## Build - Ant ########
      - name: Build with Ant
        if: ${{ env.BUILD_TECH == 'java_ant' }}
        run: ant -noinput -buildfile build.xml
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
    
    
      ######## Build - Gradle ########
      - name: Validate Gradle wrapper
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        uses: gradle/wrapper-validation-action@v1
        continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}

      - name: Build with Gradle
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        run: ./gradlew build
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}


      ######## Notify MS Teams Channel on Failure ########
#      - name: Notify dedicated MS teams channel [Build failure]
#        if: ${{ failure() }}
#        uses: jdcargile/ms-teams-notification@v1.3
#        with:
#          github-token: ${{ github.token }} # this will use the runner's token.
#          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#          notification-summary: Deployment Failed while Building the code
#          notification-color: dc3545

      ######## JUnit Test with Maven ########
      - name: Test with Maven
        run: mvn -B test --file pom.xml
      #- name: Build with Maven
        #run: mvn -B test      
      
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: target/surefire-reports/*.xml
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:          
          jacoco-csv-file: target/site/jacoco/jacoco.csv
          badges-directory: .github/JaCoCo
          generate-coverage-badge: true
          coverage-badge-filename: jacoco.svg
          generate-branches-badge: false
          branches-badge-filename: branches.svg
          colors: '#4c1 #97ca00 #a4a61d #dfb317 #fe7d37 #e05d44'
          intervals: 100 90 80 70 60 0
          on-missing-report: fail
          fail-if-coverage-less-than: 0
          fail-if-branches-less-than: 0
          fail-on-coverage-decrease: false
          fail-on-branches-decrease: false
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"     
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/   

      - uses: codecov/codecov-action@v1
        with:
          file: ./**/target/site/jacoco/jacoco.xml
          name: codecov          
          
      ######## Jest Test ########     
      - name: SonarCloud Scan
        #run: mvn -B sonar:sonar -Dsonar.host.url=http://3.143.240.138:9000 -Dsonar.projectKey=simple-java-maven-app  
        run: mvn -B sonar:sonar -Dsonar.projectKey=TestApp -Dsonar.projectName=MavenJacocowithSonar -Dsonar.host.url=http://3.141.23.89:9000 -Dsonar.login=c9566aabdf84dc48f62c9aa84bbcac7c715df76e
